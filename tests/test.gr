module Tests

from "../toml.gr" include Toml
from "list" include List
from "buffer" include Buffer
from "array" include Array
from "string" include String
use Toml.{ type Toml, fromString }
// Sort
let rec innerSortToml = tomlTree => {
  match (tomlTree) {
    TomlTable(tableItems) => {
      let tableItems = List.map(
        ((key, value)) => (key, innerSortToml(value)),
        tableItems
      )
      let tableItems = List.sort(((keyA, _), (keyB, _)) => {
        compare(keyA, keyB)
      }, tableItems)
      TomlTable(tableItems)
    },
    TomlArray(arrItems) => {
      let arrItems = List.map(innerSortToml, arrItems)
      TomlArray(arrItems)
    },
    _ => tomlTree,
  }
}
let sortToml = tomlTree => {
  match (tomlTree) {
    Ok(tomlTree) => Ok(innerSortToml(tomlTree)),
    Err(err) => Err(err),
  }
}
let log = (a, b) => {
  // Sort
  let a = sortToml(a)
  let b = sortToml(b)
  // Output
  print(a)
  print(b)
  print(a == b)
  // Stringify
  let a = toString(a)
  let b = toString(b)
  // Handle Matching
  let str = Buffer.make(0)
  let a = String.explode(a)
  let b = String.explode(b)
  let ab = Array.zip(a, b)
  // Output
  Array.forEach(((a, b)) => {
    if (a == b)
      Buffer.addString("\x1b[32m", str)
    else
      Buffer.addString("\x1b[31m", str)
    Buffer.addChar(a, str)
    Buffer.addString("\x1b[0m", str)
  }, ab)
  print(Buffer.toString(str))
}
let a = fromString(
  "# Note: this file contains literal tab characters.\n\nname.first = \"Arthur\"\n\"name\".'last' = \"Dent\"\n\nmany.dots.here.dot.dot.dot = 42\n\n# Space are ignored, and key parts can be quoted.\ncount.a       = 1\ncount . b     = 2\n\"count\".\"c\"   = 3\n\"count\" . \"d\" = 4\n'count'.'e'   = 5\n'count' . 'f' = 6\n\"count\".'g'   = 7\n\"count\" . 'h' = 8\ncount.'i'     = 9\ncount \t.\t 'j'\t   = 10\n\"count\".k     = 11\n\"count\" . l   = 12\n\n[tbl]\na.b.c = 42.666\n\n[a.few.dots]\npolka.dot = \"again?\"\npolka.dance-with = \"Dot\"\n\n[[arr]]\na.b.c=1\na.b.d=2\n\n[[arr]]\na.b.c=3\na.b.d=4\n"
)
let b = Ok(
  TomlTable(
    [
      (
        "a",
        TomlTable(
          [
            (
              "few",
              TomlTable(
                [
                  (
                    "dots",
                    TomlTable(
                      [
                        (
                          "polka",
                          TomlTable(
                            [
                              ("dance-with", TomlString("Dot")),
                              ("dot", TomlString("again?")),
                            ],
                          ),
                        ),
                      ],
                    ),
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      (
        "arr",
        TomlArray(
          [
            TomlTable(
              [
                (
                  "a",
                  TomlTable(
                    [("b", TomlTable([("c", TomlInt(1)), ("d", TomlInt(2))]))],
                  ),
                ),
              ],
            ),
            TomlTable(
              [
                (
                  "a",
                  TomlTable(
                    [("b", TomlTable([("c", TomlInt(3)), ("d", TomlInt(4))]))],
                  ),
                ),
              ],
            ),
          ],
        ),
      ),
      (
        "count",
        TomlTable(
          [
            ("a", TomlInt(1)),
            ("b", TomlInt(2)),
            ("c", TomlInt(3)),
            ("d", TomlInt(4)),
            ("e", TomlInt(5)),
            ("f", TomlInt(6)),
            ("g", TomlInt(7)),
            ("h", TomlInt(8)),
            ("i", TomlInt(9)),
            ("j", TomlInt(10)),
            ("k", TomlInt(11)),
            ("l", TomlInt(12)),
          ],
        ),
      ),
      (
        "many",
        TomlTable(
          [
            (
              "dots",
              TomlTable(
                [
                  (
                    "here",
                    TomlTable(
                      [
                        (
                          "dot",
                          TomlTable(
                            [("dot", TomlTable([("dot", TomlInt(42))]))],
                          ),
                        ),
                      ],
                    ),
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      (
        "name",
        TomlTable(
          [("first", TomlString("Arthur")), ("last", TomlString("Dent"))],
        ),
      ),
      (
        "tbl",
        TomlTable(
          [("a", TomlTable([("b", TomlTable([("c", TomlFloat(42.666))]))]))],
        ),
      ),
    ],
  ),
)
log(a, b)
